{
  "sha": "fb1b445a113ef2d1ed465732a5dd02c2e07ca1c4",
  "node_id": "C_kwDODlTdM9oAKGZiMWI0NDVhMTEzZWYyZDFlZDQ2NTczMmE1ZGQwMmMyZTA3Y2ExYzQ",
  "commit": {
    "author": {
      "name": "BrianOngXXXX",
      "email": "111723480+*******",
      "date": "2022-09-06T06:24:35Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "*******",
      "date": "2022-09-06T06:24:35Z"
    },
    "message": "PLL-1333 (#313)\n\n* PLL-1333: add generic error response for invalid token transaction id",
    "tree": {
      "sha": "d00f30aa676bba4c3b2a3581cd5f53ad3fa3b78f",
      "url": "https://api.github.com/repos/XXXX-fs/fs-platform-payment-selector/git/trees/d00f30aa676bba4c3b2a3581cd5f53ad3fa3b78f"
    },
    "url": "https://api.github.com/repos/XXXX-fs/fs-platform-payment-selector/git/commits/fb1b445a113ef2d1ed465732a5dd02c2e07ca1c4",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjFuejCRBK7hj4Ov3rIwAAoRYIAJ5vBY2CVSgJpPV4oPTex7SY\nQWkdvketSw9htZPp5ENMQ3BiF885kPDA4ajAnrfsz/hAV+a0zIILmCIjJnSU/jwH\nz7jM9cB+KybTyEzbqdBiN8Bzg9fCMhWQXWgk8Hf4aw8BxAp++tZFWubCijJfzAXB\nk8Gwoui+RTZODZd3c5qYjwRmF7nJUVBOXP9MxambAsF9behtZ3awjFDqs+mMdtzg\n6DukFt6TjuHRP01jjxK7ZqGiVp6LqnHwFRi3jnd1PPgdUj8+KkH6EZsS/eY/vnD8\npmjRwZZO4D38kbemvfQvwxr8JtiqM3/CUcrCTxHICjWvr6NRmTSAwKpdHEVd8j8=\n=yQN2\n-----END PGP SIGNATURE-----\n",
      "payload": "tree d00f30aa676bba4c3b2a3581cd5f53ad3fa3b78f\nparent c4b33934af44b93cec052e8ed1473d3d03925b62\nauthor BrianOngXXXX <111723480+*******> 1662445475 +1000\ncommitter GitHub <*******> 1662445475 +1000\n\nPLL-1333 (#313)\n\n* PLL-1333: add generic error response for invalid token transaction id"
    }
  },
  "url": "https://api.github.com/repos/XXXX-fs/fs-platform-payment-selector/commits/fb1b445a113ef2d1ed465732a5dd02c2e07ca1c4",
  "html_url": "https://github.com/XXXX-fs/fs-platform-payment-selector/commit/fb1b445a113ef2d1ed465732a5dd02c2e07ca1c4",
  "comments_url": "https://api.github.com/repos/XXXX-fs/fs-platform-payment-selector/commits/fb1b445a113ef2d1ed465732a5dd02c2e07ca1c4/comments",
  "author": {
    "login": "BrianOngXXXX",
    "id": 111723480,
    "node_id": "U_kgDOBqjD2A",
    "avatar_url": "https://avatars.githubusercontent.com/u/111723480?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/BrianOngXXXX",
    "html_url": "https://github.com/BrianOngXXXX",
    "followers_url": "https://api.github.com/users/BrianOngXXXX/followers",
    "following_url": "https://api.github.com/users/BrianOngXXXX/following{/other_user}",
    "gists_url": "https://api.github.com/users/BrianOngXXXX/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/BrianOngXXXX/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BrianOngXXXX/subscriptions",
    "organizations_url": "https://api.github.com/users/BrianOngXXXX/orgs",
    "repos_url": "https://api.github.com/users/BrianOngXXXX/repos",
    "events_url": "https://api.github.com/users/BrianOngXXXX/events{/privacy}",
    "received_events_url": "https://api.github.com/users/BrianOngXXXX/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c4b33934af44b93cec052e8ed1473d3d03925b62",
      "url": "https://api.github.com/repos/XXXX-fs/fs-platform-payment-selector/commits/c4b33934af44b93cec052e8ed1473d3d03925b62",
      "html_url": "https://github.com/XXXX-fs/fs-platform-payment-selector/commit/c4b33934af44b93cec052e8ed1473d3d03925b62"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 8,
    "deletions": 3
  },
  "files": [
    {
      "sha": "e69eb78e44f938b0a011704ccb021dda6beec486",
      "filename": "payment-selector-service/src/main/java/com/XXXX/fsplatform/paymentselector/service/rest/CardTokenizationController.java",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/XXXX-fs/fs-platform-payment-selector/blob/fb1b445a113ef2d1ed465732a5dd02c2e07ca1c4/payment-selector-service%2Fsrc%2Fmain%2Fjava%2Fcom%2FXXXX%2Ffsplatform%2Fpaymentselector%2Fservice%2Frest%2FCardTokenizationController.java",
      "raw_url": "https://github.com/XXXX-fs/fs-platform-payment-selector/raw/fb1b445a113ef2d1ed465732a5dd02c2e07ca1c4/payment-selector-service%2Fsrc%2Fmain%2Fjava%2Fcom%2FXXXX%2Ffsplatform%2Fpaymentselector%2Fservice%2Frest%2FCardTokenizationController.java",
      "contents_url": "https://api.github.com/repos/XXXX-fs/fs-platform-payment-selector/contents/payment-selector-service%2Fsrc%2Fmain%2Fjava%2Fcom%2FXXXX%2Ffsplatform%2Fpaymentselector%2Fservice%2Frest%2FCardTokenizationController.java?ref=fb1b445a113ef2d1ed465732a5dd02c2e07ca1c4",
      "patch": "@@ -97,18 +97,23 @@ public ResponseEntity<InitTokenResponse> initializeCardTokenize(\n     @GetMapping(path = \"clients/{clientId}/transactions/{tokenTransactionId}\", produces = MediaType.APPLICATION_JSON_VALUE)\n     public ResponseEntity<TokenTransactionResponse> fetchTokenTransaction(\n             @ApiParam(value = \"Client Id\", required = true) @PathVariable(\"clientId\") @IsFsClientId String clientId,\n-            @ApiParam(value = \"Token Transaction Id\", required = true) @PathVariable(\"tokenTransactionId\") UUID tokenTransactionId,\n+            @ApiParam(value = \"Token Transaction Id\", required = true) @PathVariable(\"tokenTransactionId\") String tokenTransactionId,\n             HttpServletRequest req) {\n         try {\n             log.info(\"Starting to fetch token transaction tokenization_fsClientId: {}, tokenTransactionId: {}\", clientId, tokenTransactionId);\n-            TokenTransactionResponse tokenTransactionResponse = cardTokenizeService.fetchTokenTransaction(clientId, tokenTransactionId);\n+            UUID tokenTransactionIdAsUuid = UUID.fromString(tokenTransactionId);\n+            TokenTransactionResponse tokenTransactionResponse = cardTokenizeService.fetchTokenTransaction(clientId, tokenTransactionIdAsUuid);\n             log.info(\"Successfully fetched token transaction tokenization_fsClientId: {}, tokenTransactionId: {}\", clientId, tokenTransactionId);\n \n             return ResponseEntity.status(HttpStatus.OK).body(tokenTransactionResponse);\n         } catch (TokenTransactionNotFoundException e) {\n             log.error(\"Failed to fetch token transaction - token transaction id not found. tokenization_fsClientId: {}, tokenTransactionId: {}\", clientId, tokenTransactionId, e);\n             return new ResponseEntity(new ExceptionMessage(req.getRequestURI(), \"Token transaction id is not found\"),\n                     HttpStatus.NOT_FOUND);\n+        } catch (IllegalArgumentException e) {\n+            log.error(\"Failed to fetch token transaction - token transaction id invalid. tokenization_fsClientId: {}, tokenTransactionId: {}\", clientId, tokenTransactionId, e);\n+            return new ResponseEntity(new ExceptionMessage(req.getRequestURI(), \"Invalid Token transaction id\"),\n+                    HttpStatus.BAD_REQUEST);\n         }\n     }\n "
    },
    {
      "sha": "5a96f737cece3936fbcc74e6a1f0f867074e238a",
      "filename": "payment-selector-service/src/test/java/com/XXXX/fsplatform/paymentselector/service/rest/CardTokenizationControllerTest.java",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/XXXX-fs/fs-platform-payment-selector/blob/fb1b445a113ef2d1ed465732a5dd02c2e07ca1c4/payment-selector-service%2Fsrc%2Ftest%2Fjava%2Fcom%2FXXXX%2Ffsplatform%2Fpaymentselector%2Fservice%2Frest%2FCardTokenizationControllerTest.java",
      "raw_url": "https://github.com/XXXX-fs/fs-platform-payment-selector/raw/fb1b445a113ef2d1ed465732a5dd02c2e07ca1c4/payment-selector-service%2Fsrc%2Ftest%2Fjava%2Fcom%2FXXXX%2Ffsplatform%2Fpaymentselector%2Fservice%2Frest%2FCardTokenizationControllerTest.java",
      "contents_url": "https://api.github.com/repos/XXXX-fs/fs-platform-payment-selector/contents/payment-selector-service%2Fsrc%2Ftest%2Fjava%2Fcom%2FXXXX%2Ffsplatform%2Fpaymentselector%2Fservice%2Frest%2FCardTokenizationControllerTest.java?ref=fb1b445a113ef2d1ed465732a5dd02c2e07ca1c4",
      "patch": "@@ -206,7 +206,7 @@ void fetchTokenTransaction_givenInvalidTokenTransactionId_shouldReturnBadRequest\n                 .andDo(print())\n                 .andExpect(status().isBadRequest())\n                 .andExpect(jsonPath(\"timestamp\").exists())\n-                .andExpect(jsonPath(\"message\").value(String.format(\"Invalid UUID string: invalid\")))\n+                .andExpect(jsonPath(\"message\").value(String.format(\"Invalid Token transaction id\")))\n                 .andExpect(jsonPath(\"path\").value(String.format(\"/tokenization/clients/%s/transactions/%s\", FS_CLIENT_ID, INVALID_TOKEN_TRANSACTION_ID)));\n     }\n "
    }
  ]
}
