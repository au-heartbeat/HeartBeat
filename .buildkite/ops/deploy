#!/bin/bash
set -euo pipefail

display_help() {
  echo "Usage: $0 {infra|e2e|stub|prod}" >&2
  echo
  echo "   infra    deploy infra file"
  echo "   stub     deploy stub"
  echo "   e2e      deploy application to the e2e env"
  echo "   prod     deploy application to the prod env"
  echo
  exit 1
}
deploy_infra() {
  echo "deploy_infra"
}

deploy_e2e() {
  echo "deploy_e2e"
}

deploy_stub() {
  echo "deploy_stub"
  #if [[ "$(git log -1 --pretty=%B)" == *"[stub]"* ]]; then
      sed -i -e "s/mock_server:latest/${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_HOST}\/mock_server:hb${BUILDKITE_BUILD_NUMBER}/g" infra/docker-compose.yml
      echo "OK1"
      scp  -i /var/lib/buildkite-agent/.ssh/HeartBeatKeyPair.pem -P "${AWS_SSH_PORT}" ./infra/docker-compose.yml "${AWS_USERNAME}@${AWS_EC2_IP}:~/"
#      ssh-agent bash -c "ssh-add ${AWS_PRIVATE_KEY}; scp -P $AWS_SSH_PORT ./infra/docker-compose.yml $AWS_USERNAME@$AWS_EC2_IP_MOCK_SERVER:./"
      echo "OK2"
      ssh  -i /var/lib/buildkite-agent/.ssh/HeartBeatKeyPair.pem -p "${AWS_SSH_PORT}" "${AWS_USERNAME}@${AWS_EC2_IP_MOCK_SERVER}" "
          aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_HOST}
          cp './infra/docker-compose.yml' ./
          if [[ -n $(docker images -f label=arch=stubs -q) ]]; then docker rmi -f $(docker images -f label=arch=stubs -q); fi
          docker pull ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_HOST}/mock_server:latest
          docker-compose up -d mockServer
      "
  #fi
}

deploy_prod() {
  echo "deploy_prod"
}

if [[ "$#" -le 0 ]]; then
  display_help
fi

while [[ "$#" -gt 0 ]]; do
  case $1 in
    -h|--help) display_help ;;
    infra) deploy_infra ;;
    e2e) deploy_e2e ;;
    stub) deploy_stub ;;
    prod) deploy_prod ;;
    *) echo "Unknown parameter passed: $1" ;;
  esac
  shift
done
