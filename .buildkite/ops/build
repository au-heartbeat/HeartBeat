#!/bin/bash
set -euo pipefail

# shellcheck source=/dev/null
source ./.buildkite/ops/base

display_help() {
  echo "Usage: $0 {frontend|backend|stub}" >&2
  echo
  echo "   frontend     build frontend"
  echo "   backend      build backend"
  echo "   stub         build stub"
  echo
  exit 1
}

build_backend() {
  build_and_push_image backend
}

build_stub() {
    build_and_push_image stub
}

build_frontend() {
    local AWS_HOST="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"

    aws configure set region "$AWS_REGION"
    eval "$(aws sts assume-role --role-arn "$AWS_GITHUB_ACTION_ROLE" --role-session-name buildkite | jq -r '.Credentials | to_entries | map("\(.key)=\"\(.value | tostring)\"") | .[]')"
    aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "${AWS_HOST}"

    docker build -t "${AWS_HOST}"/heartbeat_frontend:latest ./ -f ./infra/Dockerfile.frontend
    docker tag "${AWS_HOST}"/heartbeat_frontend:latest "${AWS_HOST}"/heartbeat_frontend:hb"${BUILDKITE_BUILD_NUMBER}"

    docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
      -v "$(pwd)"/.trivyignore:/.trivyignore \
      aquasec/trivy:0.20.0 image \
      --severity HIGH,CRITICAL \
      --exit-code 1 \
      --ignore-unfixed \
      --format table \
      --ignorefile /.trivyignore \
      "${AWS_HOST}"/heartbeat_frontend:latest

    docker push "${AWS_HOST}/heartbeat_frontend:latest"
    docker push "${AWS_HOST}/heartbeat_frontend:hb${BUILDKITE_BUILD_NUMBER}"

    docker rmi "${AWS_HOST}/heartbeat_frontend:latest"
    docker rmi "${AWS_HOST}/heartbeat_frontend:hb${BUILDKITE_BUILD_NUMBER}"
}

if [[ "$#" -le 0 ]]; then
  display_help
fi

while [[ "$#" -gt 0 ]]; do
  case $1 in
  -h | --help) display_help ;;
  frontend) build_frontend ;;
  backend) build_backend ;;
  stub) build_stub ;;
  *) echo "Unknown parameter passed: $1" ;;
  esac
  shift
done
