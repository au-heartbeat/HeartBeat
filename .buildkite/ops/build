#!/bin/bash
set -euo pipefail

display_help() {
  echo "Usage: $0 {frontend|backend|mockserver}" >&2
  echo
  echo "   frontend     build frontend"
  echo "   backend      build backend"
  echo "   mockserver   build mockserver"
  echo
  exit 1
}

build_backend() {
  local AWS_HOST="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"

  aws configure set region "$AWS_REGION"
  eval "$(aws sts assume-role --role-arn "$AWS_GITHUB_ACTION_ROLE" --role-session-name buildkite | jq -r '.Credentials | to_entries | map("\(.key)=\"\(.value | tostring)\"") | .[]')"
  aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "${AWS_HOST}"

  docker build -t "${AWS_HOST}"/heartbeat_backend:latest ./ -f ./infra/Dockerfile.backend
  docker tag "${AWS_HOST}"/heartbeat_backend:latest "${AWS_HOST}"/heartbeat_backend:hb"${BUILDKITE_BUILD_NUMBER}"

  docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
    -v "$(pwd)"/.trivyignore:/.trivyignore \
    aquasec/trivy:0.20.0 image \
    --severity HIGH,CRITICAL \
    --exit-code 1 \
    --ignore-unfixed \
    --format table \
    --ignorefile /.trivyignore \
    "${AWS_HOST}"/heartbeat_backend:latest

  docker push "${AWS_HOST}/heartbeat_backend:latest"
  docker push "${AWS_HOST}/heartbeat_backend:hb${BUILDKITE_BUILD_NUMBER}"

  docker rmi "${AWS_HOST}/heartbeat_backend:latest"
  docker rmi "${AWS_HOST}/heartbeat_backend:hb${BUILDKITE_BUILD_NUMBER}"
}

build_mockserver() {
  if [[ "$BUILDKITE_MESSAGE" == *"[stub]"* ]]; then
        echo "build_mockserver"

        # Install AWS CLI
        sudo yum update && sudo yum install -y awscli

        # Configure AWS credentials
        aws configure set default.region $AWS_REGION
        aws sts assume-role --role-arn $AWS_GITHUB_ACTION_ROLE

        # Login to Amazon ECR
        eval $(aws ecr get-login --no-include-email --region $AWS_REGION)

        # Build and tag for MockServer
        export REGISTRY=`aws ecr describe-repositories --repository-names mock_server --query "repositories[0].repositoryUri" --output text`
        export IMAGE_TAG="hb${BUILDKITE_BUILD_NUMBER}"
        docker build -t $REGISTRY:latest ./infra/Dockerfile.stub
        docker build -t $REGISTRY:$IMAGE_TAG ./infra/Dockerfile.stub

        # Run Trivy vulnerability scanner
        trivy --exit-code 1 --severity CRITICAL,HIGH --format table --ignore-unfixed --ignorefile .trivyignore $REGISTRY:latest

        # Push for MockServer
        docker push $REGISTRY:latest
        docker push $REGISTRY:$IMAGE_TAG
      fi
}

build_frontend() {
  echo "build frontend"
}

if [[ "$#" -le 0 ]]; then
  display_help
fi

while [[ "$#" -gt 0 ]]; do
  case $1 in
  -h | --help) display_help ;;
  frontend) build_frontend ;;
  backend) build_backend ;;
  mockserver) build_mockserver ;;
  *) echo "Unknown parameter passed: $1" ;;
  esac
  shift
done
