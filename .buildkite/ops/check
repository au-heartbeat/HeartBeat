#!/bin/bash
set -euo pipefail

display_help() {
  echo "Usage: $0 {security|frontend|backend|backend-license|frontend-license|e2e}" >&2
  echo
  echo "   security           run security check for the whole project"
  echo "   frontend           run check for the frontend"
  echo "   backend            run check for the backend"
  echo "   backend-license    check license for the backend"
  echo "   frontend-license   check license for the frontend"
  echo "   e2e                run e2e for the frontend"
  echo
  exit 1
}

security_check() {
  docker run --rm -it \
    -v "$PWD:/pwd" \
    trufflesecurity/trufflehog:latest \
    git file:///pwd --since-commit HEAD \
    --fail
}

backend_license_check() {
  cd backend
  ./gradlew clean checkLicense
}

frontend_license_check() {
  cd frontend
  npm install
  npm run license-compliance
}

backend_check() {
  cd backend
  ./gradlew clean check
  bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r ./build/reports/jacoco/test/jacocoTestReport.xml
  ./gradlew clean build -x test
}

frontend_check(){
  cd frontend
  pnpm install --no-frozen-lockfile
  pnpm lint
  pnpm coverage
  bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r ./coverage/clover.xml
  pnpm build
}

e2e_check(){
  cd frontend
  pnpm install --no-frozen-lockfile
  docker run --rm -it -v $PWD:/e2e -w /e2e cypress/included:10.0.0 --config-file cypress.config.ts
  # docker run --rm -u $(id -u):$(id -g) -v $PWD:/e2e -w /e2e cypress/included:10.0.0 --config-file cypress.config.ts
}


if [[ "$#" -le 0 ]]; then
  display_help
fi

while [[ "$#" -gt 0 ]]; do
  case $1 in
    -h|--help) display_help ;;
    security) security_check ;;
    frontend) frontend_check ;;
    backend) backend_check ;;
    e2e) e2e_check ;;
    "backend-license") backend_license_check ;;
    "frontend-license") frontend_license_check ;;
    *) echo "Unknown parameter passed: $1" ;;
  esac
  shift
done
